@using Impact.Core.Constants
@using Impact.Core.Extension
@using Impact.Core.Model
@using Impact.Website.Helper
@model Impact.Website.Models.QuarterViewModel
@{
    ViewBag.Title = "Overarbejde";
}
<div class="container">
    <h2>Vælg kvartal</h2>
    <div class="row">
        <div class="col-md-8">
            @using (Html.BeginForm("Index", "Overtime", FormMethod.Post, new {id = "quarterForm", name = "quarterForm"}))
            { 
                <div class="form-group form-inline">
                    @Html.DropDownListFor(m => m.SelectedQuarter, Model.Quarters, new {@class = "form-control", onchange = "Submit()"})
                    @Html.CheckBoxFor(m => m.BarColumnChartViewModel.IsNormalized, new { id = "toggle-normalized", data_toggle = "toggle", data_width = "200", data_height = "38", data_off = "Registrerede timer", data_on = "Udbetale timer", style="margin-right: 5px" })
                    @if (Model.ShowIncludeAllWeeksButton)
                    {
                        @Html.CheckBoxFor(m => m.IncludeAllWeeks, new { id = "toggle-allWeeks", data_toggle = "toggle", data_width = "200", data_height = "38", data_off = "Tidligere uger", data_on = "Alle uger" })
                    }
                </div>
            }
        </div>
        <div class="col-md-4 text-right">
            Din normtid / normaluge er: <strong>@Model.DisplayNormalWorkWeek timer</strong>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <div id="@Model.BalanceChartViewModel.DivId"></div>
        </div>
    </div>
</div>
<div class="container-fluid">
    <div class="row">
        <div class="col-md-12">
            <div id="@Model.BarColumnChartViewModel.DivId"></div>
        </div>
    </div>
</div>
<div class="container">
    <hr/>
    <div class="row">
        <div class="col-md-5">
            <form>
                <div class="form-group">
                    <label for="monthlyPay">Månedsløn</label>
                    <div class="input-group mb-3">
                        <input id="monthlyPay" type="number" class="form-control" placeholder="20,000" aria-label="20,000">
                        <div class="input-group-append">
                            <span class="input-group-text">kr</span>
                        </div>
                    </div>
                </div>
                <div class="form-row">
                    <div class="form-group col-md-12">
                        <label for="hourlyPay">Timeløn</label>
                        <div class="input-group mb-3">
                            <div class="input-group-prepend ">
                                <span class="input-group-text" style="width: 130px">@Model.NormalWorkMonth.ToString(ApplicationConstants.DanishCultureInfo.NumberFormat) / måned</span>
                            </div>
                            <input id="hourlyPay" disabled type="number" class="form-control" placeholder="200" aria-label="200">
                            <div class="input-group-append">
                                <span class="input-group-text">kr</span>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="form-row">
                    <div class="form-group col-md-12">
                        <div class="input-group mb-3">
                            <div class="input-group-prepend ">
                                <span class="input-group-text danger" style="width: 130px">@Model.DisplayFlexZero</span>
                            </div>
                            <input type="number" disabled class="form-control" id="flex0">
                            <input type="number" disabled class="form-control" id="flex0u">
                            <div class="input-group-append">
                                <span class="input-group-text">kr</span>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="form-row">
                    <div class="form-group col-md-12">
                        <div class="input-group mb-3">
                            <div class="input-group-prepend">
                                <span class="input-group-text warning" style="width: 130px">@Model.DisplayFlex100</span>
                            </div>
                            <input type="number" disabled class="form-control" id="flex1">
                            <input type="number" disabled class="form-control" id="flex1u">
                            <div class="input-group-append">
                                <span class="input-group-text">kr</span>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="form-row">
                    <div class="form-group col-md-12">
                        <div class="input-group mb-3">
                            <div class="input-group-prepend">
                                <span class="input-group-text success" style="width: 130px">@Model.DisplayPayout</span>
                            </div>
                            <input type="number" disabled class="form-control" id="flex2">
                            <input type="number" disabled class="form-control" id="flex2u">
                            <div class="input-group-append">
                                <span class="input-group-text">kr</span>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    Ovenstående bliver udbetalt på <strong>@Model.SummedViewModel.PayoutMonth</strong> lønsedlen
                </div>
            </form>
        </div>
        <div class="col-md-7">
            <p><strong>Forklaring af udbetalings udregneren.</strong></p>
            <p>Har du overarbejde som står til at blive udbetalt? Så prøv at indtaste din månedsløn og se hvor meget du ca. kan forvente at se på din næste lønseddel.*</p>
            <p>
                Dine månedstimer er udregnet efter følgende beregning:
                <br/>
                @Model.DisplayNormalWorkWeek timer pr. uge * 52 uger / 12 måneder ≈ @Model.NormalWorkMonth.ToString(ApplicationConstants.DanishCultureInfo.NumberFormat) timer pr. måned
            </p>
            <p>* Disse beregninger er ikke tjekket af regnskab og giver kun en approximation af de forventede beløb. <strong>Tallene er vejledende</strong></p>
        </div>
    </div>
    <hr/>
    <div class="row">
        <div class="col-md-5">
            <div id="@Model.PieChartViewModel.DivId" style="height: 250px"></div>
        </div>
        <div class="col-md-7">
            <p><strong>Forklaring af VS-grafen</strong></p>
            <p>Denne graf viser forholdet mellem @Model.DisplayFlexZero og @Model.DisplayFlex100.</p>
            <p>
                Dette er for at få en bedre fornemmelse af hvor meget ens @Model.DisplayFlex100 er værd.
                @Model.DisplayFlex100 bliver selvfølgelig udbetalt til 100% løn, men da det er umuligt at optjene @Model.DisplayFlex100 uden først at optjene 1,5 timer @Model.DisplayFlexZero, 
                så er der et tab.
            </p>
            <p>
                Hvis forholdet mellem @Model.DisplayFlexZero og @Model.DisplayFlex100 er 50/50 så betyder det reelt set at man kun får 50% udbetaling af sin @Model.DisplayFlex100, 
                da man har arbejdet lige så mange @Model.DisplayFlexZero timer gratis, som man har arbejdet @Model.DisplayFlex100 timer der bliver udbetalt.
            </p>
            <p>
                <strong>Fun fact</strong>: Det maksimale antal @Model.DisplayFlex100 timer man kan optjene, i en uge, er 5 timer, efter man har optjent 1,5 timers @Model.DisplayFlexZero. 
                Dermed bliver det maksimale procentvise forhold:
                <br/>
                @Model.DisplayFlex100: 76,9%.
                <br/>
                @Model.DisplayFlexZero: 23,1%
            </p>
        </div>
    </div>
    <hr/>
    <div class="row">
        <div class="col-md-5">
            <p>Overarbejdspotentiale-o-meter</p>
            <div id="@Model.PotentialChartViewModel.DivId"></div>
            @if (Session.Get<Profile>(ApplicationConstants.SessionName.Profile).Initials == "MAS")
            {
                <button id="racer" value="0" onclick="racerUnlock()">Click me</button>
                <div>
                    @Html.ActionLink("Thank you", "Racer", "Site", null, new {id = "racerLink", style = "display:none"})
                </div>
            }
        </div>
        <div class="col-md-7">
            <p><strong>Forklaring af potentiale-o-meter</strong></p>
            <p>Denne graf er en forlængelse af VS-grafen ovenfor. Her vises der i procent hvor tæt man er på at opnå forholdet af 76,9% @Model.DisplayFlex100 timer.</p>
            <p>Hvis man kun har @Model.DisplayFlexZero timer, viser grafen 0.</p>
            <p>Hvis man har @Model.DisplayFlex100 timer, viser grafen hvor procentvis tæt man er på forholdet 76,9% @Model.DisplayFlex100 timer.</p>
            <p>Hvis man har 0 @Model.DisplayFlexZero eller maks @Model.DisplayFlex100 timer, viser grafen 100%.</p>
        </div>
    </div>
</div>
@Scripts.Render("~/bundles/charts")
<script>
    function Submit() {
        document.quarterForm.submit();
    }
    
    window.onload = function() {
        var balance = @JavaScriptConvert.SerializeObject(Model.BalanceChartViewModel);
        var weeks = @JavaScriptConvert.SerializeObject(Model.BarColumnChartViewModel);
        var pie = @JavaScriptConvert.SerializeObject(Model.PieChartViewModel);
        var potential = @JavaScriptConvert.SerializeObject(Model.PotentialChartViewModel);

        google.charts.load('current', { packages: ['corechart', 'bar', 'gauge'] });
        google.charts.setOnLoadCallback(function() {
            drawMaterialBarOrColumnChart(balance); 
            drawColumnChart(weeks); 
            drawPieChart(pie); 
            drawGaugeChart(potential);
        });

        updateValues();
        
        $('#toggle-normalized').change(function () {
            updateValues();
        });
        $('#toggle-allWeeks').change(function() {
            updateValues();
        });
        
        $('#monthlyPay').change(function () {
            var hourly = this.value / @Model.NormalWorkMonth.ToString(ApplicationConstants.EnglishCultureInfo.NumberFormat);
            var hourlyRounded = round2D(hourly);
            if (hourlyRounded === 0)
                $('#hourlyPay').val("");
            else {
                $('#hourlyPay').val(hourlyRounded);
                calculatePayout();
            }
        });
    };

    function round2D(number) {
        return Math.round(number * 100) / 100;
    }
    
    function updateValues() {
        var showNormalized = $('#toggle-normalized').prop('checked');
        var showAllWeeks = $('#toggle-allWeeks').prop('checked');

        var data;
        //All data sets defined
        if (showNormalized && showAllWeeks) {
            data = @JavaScriptConvert.SerializeObject(Model.SummedViewModel.NormalizedAll);
        } else {
            data = @JavaScriptConvert.SerializeObject(Model.SummedViewModel.NormalizedPrevious);
        }
            
        $('#flex0').val(data.flex0);
        $('#flex1').val(data.flex100);
        $('#flex2').val(data.payout);
        calculatePayout();
    }

    function calculatePayout() {
        var hourlyRounded = $('#hourlyPay').val();
        $('#flex0u').val( $('#flex0').val() * 0 );
        $('#flex1u').val( round2D( $('#flex1').val() * hourlyRounded) );
        $('#flex2u').val( round2D( $('#flex2').val() * hourlyRounded * 1.5) );
    }
    
    function racerUnlock() {
        let button = $('#racer');
        let val = parseInt(button.val());
        button.val(val+1);
        switch (val) {
            case 0:
                button.text("Do it again");
                break;
            case 1:
                button.text("Ohh yes!");
                break;
            case 2:
                button.text("Keep 'em coming!");
                break;
            case 3:
                button.text("Once more!");
                break;
            case 4:
                button.hide();
                $('#racerLink').show();
                break;
        }
    }
</script>
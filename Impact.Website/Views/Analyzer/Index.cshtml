@using Impact.Website.Helper
@using Newtonsoft.Json
@model Impact.Website.Models.QuarterViewModel
@{
	ViewBag.Title = "Analyzer Page";
}
<div class="container">
	<h2>Vælg kvartal</h2>
    <div class="row">
        @using (Html.BeginForm("Index", "Analyzer", FormMethod.Post, new { id = "quarterForm", name = "quarterForm"}))
        {
            <div class="col-md-12">
                <form>
                    <div class="form-group form-inline">
                        @Html.DropDownListFor(m => m.SelectedQuarter, Model.Quarters, new {@class = "form-control", onchange = "Submit()"})
                        @Html.CheckBoxFor(m => m.WeeksChartViewModel.IsNormalized, new {id = "toggle-normalized", data_toggle = "toggle", data_off = "Registrerede Timer", data_on = "Udbetale Timer"})
                    </div>
                </form>
            </div>
        }
    </div>
    <div class="row">
        <div class="col-md-12">
            <div id="@Model.BalanceChartViewModel.DivId"></div>
        </div>
    </div>
</div>
<div class="container-fluid">
    <div class="row">
        <div class="col-md-12">
            <div id="@Model.WeeksChartViewModel.DivId"></div>
        </div>
    </div>
</div>
<div class="container">
    <div class="row">
        <div class="col-md-4">
            <div id="@Model.PieChartViewModel.DivId"></div>
        </div>
        <div class="col-md-4">
            <div id="@Model.PotentialChartViewModel.DivId"></div>
        </div>
    </div>
</div>
@Scripts.Render("~/Scripts/Charts/js")
<script>
    function Submit() {
        document.quarterForm.submit();
    }
    document.addEventListener("DOMContentLoaded", function() {
        var balance = @JavaScriptConvert.SerializeObject(Model.BalanceChartViewModel);
        var weeks = @JavaScriptConvert.SerializeObject(Model.WeeksChartViewModel);
        console.log(weeks);
        var pie = @JavaScriptConvert.SerializeObject(Model.PieChartViewModel);
        var potential = @JavaScriptConvert.SerializeObject(Model.PotentialChartViewModel);

        drawGraphs(balance, weeks, pie, potential);
    })
</script>
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TimeLog.TransactionalApi.SDK.OrganisationService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="APIBase", Namespace="http://www.timelog.com/api/tlp/v1_2")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TimeLog.TransactionalApi.SDK.OrganisationService.Employee))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TimeLog.TransactionalApi.SDK.OrganisationService.EmployeeHeader))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TimeLog.TransactionalApi.SDK.OrganisationService.Department))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TimeLog.TransactionalApi.SDK.OrganisationService.ResponseOfEmployee))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TimeLog.TransactionalApi.SDK.OrganisationService.Request))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TimeLog.TransactionalApi.SDK.OrganisationService.ResponseOfEmployeeHeader))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TimeLog.TransactionalApi.SDK.OrganisationService.ResponseOfDepartment))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TimeLog.TransactionalApi.SDK.OrganisationService.ResponseOfstring))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TimeLog.TransactionalApi.SDK.OrganisationService.SecurityToken))]
    public partial class APIBase : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Employee", Namespace="http://www.timelog.com/api/tlp/v1_5")]
    [System.SerializableAttribute()]
    public partial class Employee : TimeLog.TransactionalApi.SDK.OrganisationService.APIBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EmployeeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InitialsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FullnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmployeeNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid DepartmentGuidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DepartmentNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DepartmentNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SecurityLevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InterfaceLanguageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TelephoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MobileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrivateAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrivateZipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrivateCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrivateTelephoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExternalIdentifierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime HiredDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TerminationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsHiredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsLockedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasCoordinatorRoleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid CostPriceGuidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double CostPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid HourlyRateGuidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double HourlyRateField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public int EmployeeID {
            get {
                return this.EmployeeIDField;
            }
            set {
                if ((this.EmployeeIDField.Equals(value) != true)) {
                    this.EmployeeIDField = value;
                    this.RaisePropertyChanged("EmployeeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string Initials {
            get {
                return this.InitialsField;
            }
            set {
                if ((object.ReferenceEquals(this.InitialsField, value) != true)) {
                    this.InitialsField = value;
                    this.RaisePropertyChanged("Initials");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public string Fullname {
            get {
                return this.FullnameField;
            }
            set {
                if ((object.ReferenceEquals(this.FullnameField, value) != true)) {
                    this.FullnameField = value;
                    this.RaisePropertyChanged("Fullname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public string EmployeeNo {
            get {
                return this.EmployeeNoField;
            }
            set {
                if ((object.ReferenceEquals(this.EmployeeNoField, value) != true)) {
                    this.EmployeeNoField = value;
                    this.RaisePropertyChanged("EmployeeNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=8)]
        public System.Guid DepartmentGuid {
            get {
                return this.DepartmentGuidField;
            }
            set {
                if ((this.DepartmentGuidField.Equals(value) != true)) {
                    this.DepartmentGuidField = value;
                    this.RaisePropertyChanged("DepartmentGuid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=9)]
        public string DepartmentName {
            get {
                return this.DepartmentNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DepartmentNameField, value) != true)) {
                    this.DepartmentNameField = value;
                    this.RaisePropertyChanged("DepartmentName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=10)]
        public string DepartmentNo {
            get {
                return this.DepartmentNoField;
            }
            set {
                if ((object.ReferenceEquals(this.DepartmentNoField, value) != true)) {
                    this.DepartmentNoField = value;
                    this.RaisePropertyChanged("DepartmentNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=11)]
        public int SecurityLevel {
            get {
                return this.SecurityLevelField;
            }
            set {
                if ((this.SecurityLevelField.Equals(value) != true)) {
                    this.SecurityLevelField = value;
                    this.RaisePropertyChanged("SecurityLevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=12)]
        public int InterfaceLanguage {
            get {
                return this.InterfaceLanguageField;
            }
            set {
                if ((this.InterfaceLanguageField.Equals(value) != true)) {
                    this.InterfaceLanguageField = value;
                    this.RaisePropertyChanged("InterfaceLanguage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=13)]
        public string Telephone {
            get {
                return this.TelephoneField;
            }
            set {
                if ((object.ReferenceEquals(this.TelephoneField, value) != true)) {
                    this.TelephoneField = value;
                    this.RaisePropertyChanged("Telephone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=14)]
        public string Mobile {
            get {
                return this.MobileField;
            }
            set {
                if ((object.ReferenceEquals(this.MobileField, value) != true)) {
                    this.MobileField = value;
                    this.RaisePropertyChanged("Mobile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=15)]
        public string PrivateAddress {
            get {
                return this.PrivateAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.PrivateAddressField, value) != true)) {
                    this.PrivateAddressField = value;
                    this.RaisePropertyChanged("PrivateAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=16)]
        public string PrivateZip {
            get {
                return this.PrivateZipField;
            }
            set {
                if ((object.ReferenceEquals(this.PrivateZipField, value) != true)) {
                    this.PrivateZipField = value;
                    this.RaisePropertyChanged("PrivateZip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=17)]
        public string PrivateCity {
            get {
                return this.PrivateCityField;
            }
            set {
                if ((object.ReferenceEquals(this.PrivateCityField, value) != true)) {
                    this.PrivateCityField = value;
                    this.RaisePropertyChanged("PrivateCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=18)]
        public string PrivateTelephone {
            get {
                return this.PrivateTelephoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PrivateTelephoneField, value) != true)) {
                    this.PrivateTelephoneField = value;
                    this.RaisePropertyChanged("PrivateTelephone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=19)]
        public string ExternalIdentifier {
            get {
                return this.ExternalIdentifierField;
            }
            set {
                if ((object.ReferenceEquals(this.ExternalIdentifierField, value) != true)) {
                    this.ExternalIdentifierField = value;
                    this.RaisePropertyChanged("ExternalIdentifier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=20)]
        public System.DateTime HiredDate {
            get {
                return this.HiredDateField;
            }
            set {
                if ((this.HiredDateField.Equals(value) != true)) {
                    this.HiredDateField = value;
                    this.RaisePropertyChanged("HiredDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=21)]
        public System.DateTime TerminationDate {
            get {
                return this.TerminationDateField;
            }
            set {
                if ((this.TerminationDateField.Equals(value) != true)) {
                    this.TerminationDateField = value;
                    this.RaisePropertyChanged("TerminationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=22)]
        public bool IsHired {
            get {
                return this.IsHiredField;
            }
            set {
                if ((this.IsHiredField.Equals(value) != true)) {
                    this.IsHiredField = value;
                    this.RaisePropertyChanged("IsHired");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=23)]
        public bool IsLocked {
            get {
                return this.IsLockedField;
            }
            set {
                if ((this.IsLockedField.Equals(value) != true)) {
                    this.IsLockedField = value;
                    this.RaisePropertyChanged("IsLocked");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=24)]
        public bool HasCoordinatorRole {
            get {
                return this.HasCoordinatorRoleField;
            }
            set {
                if ((this.HasCoordinatorRoleField.Equals(value) != true)) {
                    this.HasCoordinatorRoleField = value;
                    this.RaisePropertyChanged("HasCoordinatorRole");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=25)]
        public System.Guid CostPriceGuid {
            get {
                return this.CostPriceGuidField;
            }
            set {
                if ((this.CostPriceGuidField.Equals(value) != true)) {
                    this.CostPriceGuidField = value;
                    this.RaisePropertyChanged("CostPriceGuid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=26)]
        public double CostPrice {
            get {
                return this.CostPriceField;
            }
            set {
                if ((this.CostPriceField.Equals(value) != true)) {
                    this.CostPriceField = value;
                    this.RaisePropertyChanged("CostPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=27)]
        public System.Guid HourlyRateGuid {
            get {
                return this.HourlyRateGuidField;
            }
            set {
                if ((this.HourlyRateGuidField.Equals(value) != true)) {
                    this.HourlyRateGuidField = value;
                    this.RaisePropertyChanged("HourlyRateGuid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=28)]
        public double HourlyRate {
            get {
                return this.HourlyRateField;
            }
            set {
                if ((this.HourlyRateField.Equals(value) != true)) {
                    this.HourlyRateField = value;
                    this.RaisePropertyChanged("HourlyRate");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EmployeeHeader", Namespace="http://www.timelog.com/api/tlp/v1_5")]
    [System.SerializableAttribute()]
    public partial class EmployeeHeader : TimeLog.TransactionalApi.SDK.OrganisationService.APIBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EmployeeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InitialsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmployeeNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FullnameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public int EmployeeID {
            get {
                return this.EmployeeIDField;
            }
            set {
                if ((this.EmployeeIDField.Equals(value) != true)) {
                    this.EmployeeIDField = value;
                    this.RaisePropertyChanged("EmployeeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string Initials {
            get {
                return this.InitialsField;
            }
            set {
                if ((object.ReferenceEquals(this.InitialsField, value) != true)) {
                    this.InitialsField = value;
                    this.RaisePropertyChanged("Initials");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public string EmployeeNo {
            get {
                return this.EmployeeNoField;
            }
            set {
                if ((object.ReferenceEquals(this.EmployeeNoField, value) != true)) {
                    this.EmployeeNoField = value;
                    this.RaisePropertyChanged("EmployeeNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public string Fullname {
            get {
                return this.FullnameField;
            }
            set {
                if ((object.ReferenceEquals(this.FullnameField, value) != true)) {
                    this.FullnameField = value;
                    this.RaisePropertyChanged("Fullname");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Department", Namespace="http://www.timelog.com/api/tlp/v1_5")]
    [System.SerializableAttribute()]
    public partial class Department : TimeLog.TransactionalApi.SDK.OrganisationService.APIBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ParentDepartmentGuidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid DepartmentManagerGuidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DepartmentIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string No {
            get {
                return this.NoField;
            }
            set {
                if ((object.ReferenceEquals(this.NoField, value) != true)) {
                    this.NoField = value;
                    this.RaisePropertyChanged("No");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ParentDepartmentGuid {
            get {
                return this.ParentDepartmentGuidField;
            }
            set {
                if ((this.ParentDepartmentGuidField.Equals(value) != true)) {
                    this.ParentDepartmentGuidField = value;
                    this.RaisePropertyChanged("ParentDepartmentGuid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public System.Guid DepartmentManagerGuid {
            get {
                return this.DepartmentManagerGuidField;
            }
            set {
                if ((this.DepartmentManagerGuidField.Equals(value) != true)) {
                    this.DepartmentManagerGuidField = value;
                    this.RaisePropertyChanged("DepartmentManagerGuid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public int DepartmentID {
            get {
                return this.DepartmentIDField;
            }
            set {
                if ((this.DepartmentIDField.Equals(value) != true)) {
                    this.DepartmentIDField = value;
                    this.RaisePropertyChanged("DepartmentID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResponseOfEmployee", Namespace="http://api.timelog.com")]
    [System.SerializableAttribute()]
    public partial class ResponseOfEmployee : TimeLog.TransactionalApi.SDK.OrganisationService.APIBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TimeLog.TransactionalApi.SDK.OrganisationService.Employee[] ReturnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReturnTypeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TimeLog.TransactionalApi.SDK.OrganisationService.Request RequestField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TimeLog.TransactionalApi.SDK.OrganisationService.ExecutionStatus ResponseStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TimeLog.TransactionalApi.SDK.OrganisationService.APIMessage[] MessagesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ErrorCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsReturnPagedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalPageCountField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TimeLog.TransactionalApi.SDK.OrganisationService.Employee[] Return {
            get {
                return this.ReturnField;
            }
            set {
                if ((object.ReferenceEquals(this.ReturnField, value) != true)) {
                    this.ReturnField = value;
                    this.RaisePropertyChanged("Return");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReturnTypeDescription {
            get {
                return this.ReturnTypeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ReturnTypeDescriptionField, value) != true)) {
                    this.ReturnTypeDescriptionField = value;
                    this.RaisePropertyChanged("ReturnTypeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public TimeLog.TransactionalApi.SDK.OrganisationService.Request Request {
            get {
                return this.RequestField;
            }
            set {
                if ((object.ReferenceEquals(this.RequestField, value) != true)) {
                    this.RequestField = value;
                    this.RaisePropertyChanged("Request");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public TimeLog.TransactionalApi.SDK.OrganisationService.ExecutionStatus ResponseState {
            get {
                return this.ResponseStateField;
            }
            set {
                if ((this.ResponseStateField.Equals(value) != true)) {
                    this.ResponseStateField = value;
                    this.RaisePropertyChanged("ResponseState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public TimeLog.TransactionalApi.SDK.OrganisationService.APIMessage[] Messages {
            get {
                return this.MessagesField;
            }
            set {
                if ((object.ReferenceEquals(this.MessagesField, value) != true)) {
                    this.MessagesField = value;
                    this.RaisePropertyChanged("Messages");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public int ErrorCode {
            get {
                return this.ErrorCodeField;
            }
            set {
                if ((this.ErrorCodeField.Equals(value) != true)) {
                    this.ErrorCodeField = value;
                    this.RaisePropertyChanged("ErrorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public bool IsReturnPaged {
            get {
                return this.IsReturnPagedField;
            }
            set {
                if ((this.IsReturnPagedField.Equals(value) != true)) {
                    this.IsReturnPagedField = value;
                    this.RaisePropertyChanged("IsReturnPaged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public int TotalPageCount {
            get {
                return this.TotalPageCountField;
            }
            set {
                if ((this.TotalPageCountField.Equals(value) != true)) {
                    this.TotalPageCountField = value;
                    this.RaisePropertyChanged("TotalPageCount");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Request", Namespace="http://api.timelog.com")]
    [System.SerializableAttribute()]
    public partial class Request : TimeLog.TransactionalApi.SDK.OrganisationService.APIBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TimeLog.TransactionalApi.SDK.OrganisationService.RequestParameter[] ParametersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServiceClassField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MethodNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TimeLog.TransactionalApi.SDK.OrganisationService.RequestParameter[] Parameters {
            get {
                return this.ParametersField;
            }
            set {
                if ((object.ReferenceEquals(this.ParametersField, value) != true)) {
                    this.ParametersField = value;
                    this.RaisePropertyChanged("Parameters");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceClass {
            get {
                return this.ServiceClassField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceClassField, value) != true)) {
                    this.ServiceClassField = value;
                    this.RaisePropertyChanged("ServiceClass");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string MethodName {
            get {
                return this.MethodNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MethodNameField, value) != true)) {
                    this.MethodNameField = value;
                    this.RaisePropertyChanged("MethodName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResponseOfEmployeeHeader", Namespace="http://api.timelog.com")]
    [System.SerializableAttribute()]
    public partial class ResponseOfEmployeeHeader : TimeLog.TransactionalApi.SDK.OrganisationService.APIBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TimeLog.TransactionalApi.SDK.OrganisationService.EmployeeHeader[] ReturnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReturnTypeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TimeLog.TransactionalApi.SDK.OrganisationService.Request RequestField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TimeLog.TransactionalApi.SDK.OrganisationService.ExecutionStatus ResponseStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TimeLog.TransactionalApi.SDK.OrganisationService.APIMessage[] MessagesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ErrorCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsReturnPagedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalPageCountField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TimeLog.TransactionalApi.SDK.OrganisationService.EmployeeHeader[] Return {
            get {
                return this.ReturnField;
            }
            set {
                if ((object.ReferenceEquals(this.ReturnField, value) != true)) {
                    this.ReturnField = value;
                    this.RaisePropertyChanged("Return");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReturnTypeDescription {
            get {
                return this.ReturnTypeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ReturnTypeDescriptionField, value) != true)) {
                    this.ReturnTypeDescriptionField = value;
                    this.RaisePropertyChanged("ReturnTypeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public TimeLog.TransactionalApi.SDK.OrganisationService.Request Request {
            get {
                return this.RequestField;
            }
            set {
                if ((object.ReferenceEquals(this.RequestField, value) != true)) {
                    this.RequestField = value;
                    this.RaisePropertyChanged("Request");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public TimeLog.TransactionalApi.SDK.OrganisationService.ExecutionStatus ResponseState {
            get {
                return this.ResponseStateField;
            }
            set {
                if ((this.ResponseStateField.Equals(value) != true)) {
                    this.ResponseStateField = value;
                    this.RaisePropertyChanged("ResponseState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public TimeLog.TransactionalApi.SDK.OrganisationService.APIMessage[] Messages {
            get {
                return this.MessagesField;
            }
            set {
                if ((object.ReferenceEquals(this.MessagesField, value) != true)) {
                    this.MessagesField = value;
                    this.RaisePropertyChanged("Messages");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public int ErrorCode {
            get {
                return this.ErrorCodeField;
            }
            set {
                if ((this.ErrorCodeField.Equals(value) != true)) {
                    this.ErrorCodeField = value;
                    this.RaisePropertyChanged("ErrorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public bool IsReturnPaged {
            get {
                return this.IsReturnPagedField;
            }
            set {
                if ((this.IsReturnPagedField.Equals(value) != true)) {
                    this.IsReturnPagedField = value;
                    this.RaisePropertyChanged("IsReturnPaged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public int TotalPageCount {
            get {
                return this.TotalPageCountField;
            }
            set {
                if ((this.TotalPageCountField.Equals(value) != true)) {
                    this.TotalPageCountField = value;
                    this.RaisePropertyChanged("TotalPageCount");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResponseOfDepartment", Namespace="http://api.timelog.com")]
    [System.SerializableAttribute()]
    public partial class ResponseOfDepartment : TimeLog.TransactionalApi.SDK.OrganisationService.APIBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TimeLog.TransactionalApi.SDK.OrganisationService.Department[] ReturnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReturnTypeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TimeLog.TransactionalApi.SDK.OrganisationService.Request RequestField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TimeLog.TransactionalApi.SDK.OrganisationService.ExecutionStatus ResponseStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TimeLog.TransactionalApi.SDK.OrganisationService.APIMessage[] MessagesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ErrorCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsReturnPagedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalPageCountField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TimeLog.TransactionalApi.SDK.OrganisationService.Department[] Return {
            get {
                return this.ReturnField;
            }
            set {
                if ((object.ReferenceEquals(this.ReturnField, value) != true)) {
                    this.ReturnField = value;
                    this.RaisePropertyChanged("Return");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReturnTypeDescription {
            get {
                return this.ReturnTypeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ReturnTypeDescriptionField, value) != true)) {
                    this.ReturnTypeDescriptionField = value;
                    this.RaisePropertyChanged("ReturnTypeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public TimeLog.TransactionalApi.SDK.OrganisationService.Request Request {
            get {
                return this.RequestField;
            }
            set {
                if ((object.ReferenceEquals(this.RequestField, value) != true)) {
                    this.RequestField = value;
                    this.RaisePropertyChanged("Request");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public TimeLog.TransactionalApi.SDK.OrganisationService.ExecutionStatus ResponseState {
            get {
                return this.ResponseStateField;
            }
            set {
                if ((this.ResponseStateField.Equals(value) != true)) {
                    this.ResponseStateField = value;
                    this.RaisePropertyChanged("ResponseState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public TimeLog.TransactionalApi.SDK.OrganisationService.APIMessage[] Messages {
            get {
                return this.MessagesField;
            }
            set {
                if ((object.ReferenceEquals(this.MessagesField, value) != true)) {
                    this.MessagesField = value;
                    this.RaisePropertyChanged("Messages");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public int ErrorCode {
            get {
                return this.ErrorCodeField;
            }
            set {
                if ((this.ErrorCodeField.Equals(value) != true)) {
                    this.ErrorCodeField = value;
                    this.RaisePropertyChanged("ErrorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public bool IsReturnPaged {
            get {
                return this.IsReturnPagedField;
            }
            set {
                if ((this.IsReturnPagedField.Equals(value) != true)) {
                    this.IsReturnPagedField = value;
                    this.RaisePropertyChanged("IsReturnPaged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public int TotalPageCount {
            get {
                return this.TotalPageCountField;
            }
            set {
                if ((this.TotalPageCountField.Equals(value) != true)) {
                    this.TotalPageCountField = value;
                    this.RaisePropertyChanged("TotalPageCount");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResponseOfstring", Namespace="http://api.timelog.com")]
    [System.SerializableAttribute()]
    public partial class ResponseOfstring : TimeLog.TransactionalApi.SDK.OrganisationService.APIBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] ReturnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReturnTypeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TimeLog.TransactionalApi.SDK.OrganisationService.Request RequestField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TimeLog.TransactionalApi.SDK.OrganisationService.ExecutionStatus ResponseStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TimeLog.TransactionalApi.SDK.OrganisationService.APIMessage[] MessagesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ErrorCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsReturnPagedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalPageCountField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] Return {
            get {
                return this.ReturnField;
            }
            set {
                if ((object.ReferenceEquals(this.ReturnField, value) != true)) {
                    this.ReturnField = value;
                    this.RaisePropertyChanged("Return");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReturnTypeDescription {
            get {
                return this.ReturnTypeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ReturnTypeDescriptionField, value) != true)) {
                    this.ReturnTypeDescriptionField = value;
                    this.RaisePropertyChanged("ReturnTypeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public TimeLog.TransactionalApi.SDK.OrganisationService.Request Request {
            get {
                return this.RequestField;
            }
            set {
                if ((object.ReferenceEquals(this.RequestField, value) != true)) {
                    this.RequestField = value;
                    this.RaisePropertyChanged("Request");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public TimeLog.TransactionalApi.SDK.OrganisationService.ExecutionStatus ResponseState {
            get {
                return this.ResponseStateField;
            }
            set {
                if ((this.ResponseStateField.Equals(value) != true)) {
                    this.ResponseStateField = value;
                    this.RaisePropertyChanged("ResponseState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public TimeLog.TransactionalApi.SDK.OrganisationService.APIMessage[] Messages {
            get {
                return this.MessagesField;
            }
            set {
                if ((object.ReferenceEquals(this.MessagesField, value) != true)) {
                    this.MessagesField = value;
                    this.RaisePropertyChanged("Messages");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public int ErrorCode {
            get {
                return this.ErrorCodeField;
            }
            set {
                if ((this.ErrorCodeField.Equals(value) != true)) {
                    this.ErrorCodeField = value;
                    this.RaisePropertyChanged("ErrorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public bool IsReturnPaged {
            get {
                return this.IsReturnPagedField;
            }
            set {
                if ((this.IsReturnPagedField.Equals(value) != true)) {
                    this.IsReturnPagedField = value;
                    this.RaisePropertyChanged("IsReturnPaged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public int TotalPageCount {
            get {
                return this.TotalPageCountField;
            }
            set {
                if ((this.TotalPageCountField.Equals(value) != true)) {
                    this.TotalPageCountField = value;
                    this.RaisePropertyChanged("TotalPageCount");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SecurityToken", Namespace="http://www.timelog.com/api/tlp/v1_3")]
    [System.SerializableAttribute()]
    public partial class SecurityToken : TimeLog.TransactionalApi.SDK.OrganisationService.APIBase {
        
        private string InitialsField;
        
        private System.DateTime ExpiresField;
        
        private string HashField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Initials {
            get {
                return this.InitialsField;
            }
            set {
                if ((object.ReferenceEquals(this.InitialsField, value) != true)) {
                    this.InitialsField = value;
                    this.RaisePropertyChanged("Initials");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=1)]
        public System.DateTime Expires {
            get {
                return this.ExpiresField;
            }
            set {
                if ((this.ExpiresField.Equals(value) != true)) {
                    this.ExpiresField = value;
                    this.RaisePropertyChanged("Expires");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public string Hash {
            get {
                return this.HashField;
            }
            set {
                if ((object.ReferenceEquals(this.HashField, value) != true)) {
                    this.HashField = value;
                    this.RaisePropertyChanged("Hash");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ExecutionStatus", Namespace="http://schemas.datacontract.org/2004/07/TimeLog.TLP.Common")]
    public enum ExecutionStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotSet = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Success = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Invalid = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Error = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="APIMessage", Namespace="http://api.timelog.com")]
    [System.SerializableAttribute()]
    public partial class APIMessage : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TimeLog.TransactionalApi.SDK.OrganisationService.APIMessageSeverity SeverityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ErrorCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TimeLog.TransactionalApi.SDK.OrganisationService.APIMessageSeverity Severity {
            get {
                return this.SeverityField;
            }
            set {
                if ((this.SeverityField.Equals(value) != true)) {
                    this.SeverityField = value;
                    this.RaisePropertyChanged("Severity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public int ErrorCode {
            get {
                return this.ErrorCodeField;
            }
            set {
                if ((this.ErrorCodeField.Equals(value) != true)) {
                    this.ErrorCodeField = value;
                    this.RaisePropertyChanged("ErrorCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequestParameter", Namespace="http://api.timelog.com")]
    [System.SerializableAttribute()]
    public partial class RequestParameter : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="APIMessageSeverity", Namespace="http://schemas.datacontract.org/2004/07/TimeLog.TLP.API.Proxy.Communication.V1_0")]
    public enum APIMessageSeverity : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Error = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Invalid = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Message = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://www.timelog.com/api/tlp/v1_5", ConfigurationName="OrganisationService.OrganisationService")]
    public interface OrganisationService {
        
        // CODEGEN: Generating message contract since the wrapper namespace (http://www.timelog.com/api/tlp/v1_3) of message IsAliveRequest does not match the default value (http://www.timelog.com/api/tlp/v1_5)
        [System.ServiceModel.OperationContractAttribute(Action="IsAliveRequest", ReplyAction="IsAliveReponse")]
        TimeLog.TransactionalApi.SDK.OrganisationService.IsAliveResponse IsAlive(TimeLog.TransactionalApi.SDK.OrganisationService.IsAliveRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="IsAliveRequest", ReplyAction="IsAliveReponse")]
        System.Threading.Tasks.Task<TimeLog.TransactionalApi.SDK.OrganisationService.IsAliveResponse> IsAliveAsync(TimeLog.TransactionalApi.SDK.OrganisationService.IsAliveRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/api/tlp/v1_5/OrganisationService/GetEmployeesPaged", ReplyAction="http://www.timelog.com/api/tlp/v1_5/OrganisationService/GetEmployeesPagedResponse" +
            "")]
        TimeLog.TransactionalApi.SDK.OrganisationService.ResponseOfEmployee GetEmployeesPaged(int page, int pageSize, TimeLog.TransactionalApi.SDK.OrganisationService.SecurityToken token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/api/tlp/v1_5/OrganisationService/GetEmployeesPaged", ReplyAction="http://www.timelog.com/api/tlp/v1_5/OrganisationService/GetEmployeesPagedResponse" +
            "")]
        System.Threading.Tasks.Task<TimeLog.TransactionalApi.SDK.OrganisationService.ResponseOfEmployee> GetEmployeesPagedAsync(int page, int pageSize, TimeLog.TransactionalApi.SDK.OrganisationService.SecurityToken token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/api/tlp/v1_5/OrganisationService/GetEmployeeByInitials", ReplyAction="http://www.timelog.com/api/tlp/v1_5/OrganisationService/GetEmployeeByInitialsResp" +
            "onse")]
        TimeLog.TransactionalApi.SDK.OrganisationService.ResponseOfEmployeeHeader GetEmployeeByInitials(string initials, TimeLog.TransactionalApi.SDK.OrganisationService.SecurityToken token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/api/tlp/v1_5/OrganisationService/GetEmployeeByInitials", ReplyAction="http://www.timelog.com/api/tlp/v1_5/OrganisationService/GetEmployeeByInitialsResp" +
            "onse")]
        System.Threading.Tasks.Task<TimeLog.TransactionalApi.SDK.OrganisationService.ResponseOfEmployeeHeader> GetEmployeeByInitialsAsync(string initials, TimeLog.TransactionalApi.SDK.OrganisationService.SecurityToken token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/api/tlp/v1_5/OrganisationService/CreateEmployee", ReplyAction="http://www.timelog.com/api/tlp/v1_5/OrganisationService/CreateEmployeeResponse")]
        TimeLog.TransactionalApi.SDK.OrganisationService.ResponseOfEmployeeHeader CreateEmployee(
                    System.Guid employeeGuid, 
                    string initials, 
                    string firstname, 
                    string lastname, 
                    string employeeNo, 
                    string email, 
                    string title, 
                    string telephone, 
                    string mobile, 
                    string normalWorkingTimeName, 
                    string holidayCalendarName, 
                    string allowanceLegislationName, 
                    string employeeTypeName, 
                    string hourlyRateName, 
                    string costPriceName, 
                    string externalIdentifier, 
                    string password, 
                    System.Guid departmentGuid, 
                    TimeLog.TransactionalApi.SDK.OrganisationService.SecurityToken token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/api/tlp/v1_5/OrganisationService/CreateEmployee", ReplyAction="http://www.timelog.com/api/tlp/v1_5/OrganisationService/CreateEmployeeResponse")]
        System.Threading.Tasks.Task<TimeLog.TransactionalApi.SDK.OrganisationService.ResponseOfEmployeeHeader> CreateEmployeeAsync(
                    System.Guid employeeGuid, 
                    string initials, 
                    string firstname, 
                    string lastname, 
                    string employeeNo, 
                    string email, 
                    string title, 
                    string telephone, 
                    string mobile, 
                    string normalWorkingTimeName, 
                    string holidayCalendarName, 
                    string allowanceLegislationName, 
                    string employeeTypeName, 
                    string hourlyRateName, 
                    string costPriceName, 
                    string externalIdentifier, 
                    string password, 
                    System.Guid departmentGuid, 
                    TimeLog.TransactionalApi.SDK.OrganisationService.SecurityToken token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/api/tlp/v1_5/OrganisationService/CreateEmployeeNotificatio" +
            "n", ReplyAction="http://www.timelog.com/api/tlp/v1_5/OrganisationService/CreateEmployeeNotificatio" +
            "nResponse")]
        TimeLog.TransactionalApi.SDK.OrganisationService.ResponseOfEmployeeHeader CreateEmployeeNotification(System.Guid employeeGuid, TimeLog.TransactionalApi.SDK.OrganisationService.SecurityToken token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/api/tlp/v1_5/OrganisationService/CreateEmployeeNotificatio" +
            "n", ReplyAction="http://www.timelog.com/api/tlp/v1_5/OrganisationService/CreateEmployeeNotificatio" +
            "nResponse")]
        System.Threading.Tasks.Task<TimeLog.TransactionalApi.SDK.OrganisationService.ResponseOfEmployeeHeader> CreateEmployeeNotificationAsync(System.Guid employeeGuid, TimeLog.TransactionalApi.SDK.OrganisationService.SecurityToken token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/api/tlp/v1_5/OrganisationService/UpdateEmployee", ReplyAction="http://www.timelog.com/api/tlp/v1_5/OrganisationService/UpdateEmployeeResponse")]
        TimeLog.TransactionalApi.SDK.OrganisationService.ResponseOfEmployeeHeader UpdateEmployee(
                    System.Guid employeeGuid, 
                    string initials, 
                    string firstname, 
                    string lastname, 
                    string employeeNo, 
                    string email, 
                    string title, 
                    string telephone, 
                    string mobile, 
                    string normalWorkingTimeName, 
                    string holidayCalendarName, 
                    string allowanceLegislationName, 
                    string employeeTypeName, 
                    string hourlyRateName, 
                    string costPriceName, 
                    string externalIdentifier, 
                    TimeLog.TransactionalApi.SDK.OrganisationService.SecurityToken token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/api/tlp/v1_5/OrganisationService/UpdateEmployee", ReplyAction="http://www.timelog.com/api/tlp/v1_5/OrganisationService/UpdateEmployeeResponse")]
        System.Threading.Tasks.Task<TimeLog.TransactionalApi.SDK.OrganisationService.ResponseOfEmployeeHeader> UpdateEmployeeAsync(
                    System.Guid employeeGuid, 
                    string initials, 
                    string firstname, 
                    string lastname, 
                    string employeeNo, 
                    string email, 
                    string title, 
                    string telephone, 
                    string mobile, 
                    string normalWorkingTimeName, 
                    string holidayCalendarName, 
                    string allowanceLegislationName, 
                    string employeeTypeName, 
                    string hourlyRateName, 
                    string costPriceName, 
                    string externalIdentifier, 
                    TimeLog.TransactionalApi.SDK.OrganisationService.SecurityToken token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/api/tlp/v1_5/OrganisationService/ActivateEmployee", ReplyAction="http://www.timelog.com/api/tlp/v1_5/OrganisationService/ActivateEmployeeResponse")]
        TimeLog.TransactionalApi.SDK.OrganisationService.ResponseOfEmployeeHeader ActivateEmployee(System.Guid employeeGuid, int securityLevel, bool hasCoordinatorRole, System.DateTime hiredDate, TimeLog.TransactionalApi.SDK.OrganisationService.SecurityToken token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/api/tlp/v1_5/OrganisationService/ActivateEmployee", ReplyAction="http://www.timelog.com/api/tlp/v1_5/OrganisationService/ActivateEmployeeResponse")]
        System.Threading.Tasks.Task<TimeLog.TransactionalApi.SDK.OrganisationService.ResponseOfEmployeeHeader> ActivateEmployeeAsync(System.Guid employeeGuid, int securityLevel, bool hasCoordinatorRole, System.DateTime hiredDate, TimeLog.TransactionalApi.SDK.OrganisationService.SecurityToken token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/api/tlp/v1_5/OrganisationService/ChangeEmployeeSecurityLev" +
            "el", ReplyAction="http://www.timelog.com/api/tlp/v1_5/OrganisationService/ChangeEmployeeSecurityLev" +
            "elResponse")]
        TimeLog.TransactionalApi.SDK.OrganisationService.ResponseOfEmployeeHeader ChangeEmployeeSecurityLevel(System.Guid employeeGuid, int securityLevel, bool hasCoordinatorRole, TimeLog.TransactionalApi.SDK.OrganisationService.SecurityToken token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/api/tlp/v1_5/OrganisationService/ChangeEmployeeSecurityLev" +
            "el", ReplyAction="http://www.timelog.com/api/tlp/v1_5/OrganisationService/ChangeEmployeeSecurityLev" +
            "elResponse")]
        System.Threading.Tasks.Task<TimeLog.TransactionalApi.SDK.OrganisationService.ResponseOfEmployeeHeader> ChangeEmployeeSecurityLevelAsync(System.Guid employeeGuid, int securityLevel, bool hasCoordinatorRole, TimeLog.TransactionalApi.SDK.OrganisationService.SecurityToken token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/api/tlp/v1_5/OrganisationService/ChangeEmployeeDepartment", ReplyAction="http://www.timelog.com/api/tlp/v1_5/OrganisationService/ChangeEmployeeDepartmentR" +
            "esponse")]
        TimeLog.TransactionalApi.SDK.OrganisationService.ResponseOfEmployeeHeader ChangeEmployeeDepartment(System.Guid employeeGuid, System.Guid departmentGuid, TimeLog.TransactionalApi.SDK.OrganisationService.SecurityToken token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/api/tlp/v1_5/OrganisationService/ChangeEmployeeDepartment", ReplyAction="http://www.timelog.com/api/tlp/v1_5/OrganisationService/ChangeEmployeeDepartmentR" +
            "esponse")]
        System.Threading.Tasks.Task<TimeLog.TransactionalApi.SDK.OrganisationService.ResponseOfEmployeeHeader> ChangeEmployeeDepartmentAsync(System.Guid employeeGuid, System.Guid departmentGuid, TimeLog.TransactionalApi.SDK.OrganisationService.SecurityToken token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/api/tlp/v1_5/OrganisationService/DeactivateEmployee", ReplyAction="http://www.timelog.com/api/tlp/v1_5/OrganisationService/DeactivateEmployeeRespons" +
            "e")]
        TimeLog.TransactionalApi.SDK.OrganisationService.ResponseOfEmployeeHeader DeactivateEmployee(System.Guid employeeGuid, System.DateTime terminationDate, TimeLog.TransactionalApi.SDK.OrganisationService.SecurityToken token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/api/tlp/v1_5/OrganisationService/DeactivateEmployee", ReplyAction="http://www.timelog.com/api/tlp/v1_5/OrganisationService/DeactivateEmployeeRespons" +
            "e")]
        System.Threading.Tasks.Task<TimeLog.TransactionalApi.SDK.OrganisationService.ResponseOfEmployeeHeader> DeactivateEmployeeAsync(System.Guid employeeGuid, System.DateTime terminationDate, TimeLog.TransactionalApi.SDK.OrganisationService.SecurityToken token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/api/tlp/v1_5/OrganisationService/GetDepartments", ReplyAction="http://www.timelog.com/api/tlp/v1_5/OrganisationService/GetDepartmentsResponse")]
        TimeLog.TransactionalApi.SDK.OrganisationService.ResponseOfDepartment GetDepartments(TimeLog.TransactionalApi.SDK.OrganisationService.SecurityToken token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/api/tlp/v1_5/OrganisationService/GetDepartments", ReplyAction="http://www.timelog.com/api/tlp/v1_5/OrganisationService/GetDepartmentsResponse")]
        System.Threading.Tasks.Task<TimeLog.TransactionalApi.SDK.OrganisationService.ResponseOfDepartment> GetDepartmentsAsync(TimeLog.TransactionalApi.SDK.OrganisationService.SecurityToken token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/api/tlp/v1_5/OrganisationService/GetDepartmentByNo", ReplyAction="http://www.timelog.com/api/tlp/v1_5/OrganisationService/GetDepartmentByNoResponse" +
            "")]
        TimeLog.TransactionalApi.SDK.OrganisationService.ResponseOfDepartment GetDepartmentByNo(string departmentNo, TimeLog.TransactionalApi.SDK.OrganisationService.SecurityToken token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/api/tlp/v1_5/OrganisationService/GetDepartmentByNo", ReplyAction="http://www.timelog.com/api/tlp/v1_5/OrganisationService/GetDepartmentByNoResponse" +
            "")]
        System.Threading.Tasks.Task<TimeLog.TransactionalApi.SDK.OrganisationService.ResponseOfDepartment> GetDepartmentByNoAsync(string departmentNo, TimeLog.TransactionalApi.SDK.OrganisationService.SecurityToken token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/api/tlp/v1_5/OrganisationService/CreateDepartment", ReplyAction="http://www.timelog.com/api/tlp/v1_5/OrganisationService/CreateDepartmentResponse")]
        TimeLog.TransactionalApi.SDK.OrganisationService.ResponseOfDepartment CreateDepartment(System.Guid departmentGuid, string name, string no, System.Guid parentDepartmentGuid, System.Guid departmentManagerGuid, TimeLog.TransactionalApi.SDK.OrganisationService.SecurityToken token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/api/tlp/v1_5/OrganisationService/CreateDepartment", ReplyAction="http://www.timelog.com/api/tlp/v1_5/OrganisationService/CreateDepartmentResponse")]
        System.Threading.Tasks.Task<TimeLog.TransactionalApi.SDK.OrganisationService.ResponseOfDepartment> CreateDepartmentAsync(System.Guid departmentGuid, string name, string no, System.Guid parentDepartmentGuid, System.Guid departmentManagerGuid, TimeLog.TransactionalApi.SDK.OrganisationService.SecurityToken token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/api/tlp/v1_5/OrganisationService/UpdateDepartment", ReplyAction="http://www.timelog.com/api/tlp/v1_5/OrganisationService/UpdateDepartmentResponse")]
        TimeLog.TransactionalApi.SDK.OrganisationService.ResponseOfDepartment UpdateDepartment(System.Guid departmentGuid, string name, string no, System.Guid parentDepartmentGuid, System.Guid departmentManagerGuid, TimeLog.TransactionalApi.SDK.OrganisationService.SecurityToken token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/api/tlp/v1_5/OrganisationService/UpdateDepartment", ReplyAction="http://www.timelog.com/api/tlp/v1_5/OrganisationService/UpdateDepartmentResponse")]
        System.Threading.Tasks.Task<TimeLog.TransactionalApi.SDK.OrganisationService.ResponseOfDepartment> UpdateDepartmentAsync(System.Guid departmentGuid, string name, string no, System.Guid parentDepartmentGuid, System.Guid departmentManagerGuid, TimeLog.TransactionalApi.SDK.OrganisationService.SecurityToken token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/api/tlp/v1_5/OrganisationService/DeactivateDepartment", ReplyAction="http://www.timelog.com/api/tlp/v1_5/OrganisationService/DeactivateDepartmentRespo" +
            "nse")]
        TimeLog.TransactionalApi.SDK.OrganisationService.ResponseOfDepartment DeactivateDepartment(System.Guid departmentGuid, TimeLog.TransactionalApi.SDK.OrganisationService.SecurityToken token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/api/tlp/v1_5/OrganisationService/DeactivateDepartment", ReplyAction="http://www.timelog.com/api/tlp/v1_5/OrganisationService/DeactivateDepartmentRespo" +
            "nse")]
        System.Threading.Tasks.Task<TimeLog.TransactionalApi.SDK.OrganisationService.ResponseOfDepartment> DeactivateDepartmentAsync(System.Guid departmentGuid, TimeLog.TransactionalApi.SDK.OrganisationService.SecurityToken token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/api/tlp/v1_5/OrganisationService/GetEmployeeTypes", ReplyAction="http://www.timelog.com/api/tlp/v1_5/OrganisationService/GetEmployeeTypesResponse")]
        TimeLog.TransactionalApi.SDK.OrganisationService.ResponseOfstring GetEmployeeTypes(TimeLog.TransactionalApi.SDK.OrganisationService.SecurityToken token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/api/tlp/v1_5/OrganisationService/GetEmployeeTypes", ReplyAction="http://www.timelog.com/api/tlp/v1_5/OrganisationService/GetEmployeeTypesResponse")]
        System.Threading.Tasks.Task<TimeLog.TransactionalApi.SDK.OrganisationService.ResponseOfstring> GetEmployeeTypesAsync(TimeLog.TransactionalApi.SDK.OrganisationService.SecurityToken token);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="IsAlive", WrapperNamespace="http://www.timelog.com/api/tlp/v1_3", IsWrapped=true)]
    public partial class IsAliveRequest {
        
        public IsAliveRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="IsAliveResponse", WrapperNamespace="http://www.timelog.com/api/tlp/v1_3", IsWrapped=true)]
    public partial class IsAliveResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.timelog.com/api/tlp/v1_3", Order=0)]
        public bool IsAliveResult;
        
        public IsAliveResponse() {
        }
        
        public IsAliveResponse(bool IsAliveResult) {
            this.IsAliveResult = IsAliveResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface OrganisationServiceChannel : TimeLog.TransactionalApi.SDK.OrganisationService.OrganisationService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class OrganisationServiceClient : System.ServiceModel.ClientBase<TimeLog.TransactionalApi.SDK.OrganisationService.OrganisationService>, TimeLog.TransactionalApi.SDK.OrganisationService.OrganisationService {
        
        public OrganisationServiceClient() {
        }
        
        public OrganisationServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public OrganisationServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public OrganisationServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public OrganisationServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TimeLog.TransactionalApi.SDK.OrganisationService.IsAliveResponse TimeLog.TransactionalApi.SDK.OrganisationService.OrganisationService.IsAlive(TimeLog.TransactionalApi.SDK.OrganisationService.IsAliveRequest request) {
            return base.Channel.IsAlive(request);
        }
        
        public bool IsAlive() {
            TimeLog.TransactionalApi.SDK.OrganisationService.IsAliveRequest inValue = new TimeLog.TransactionalApi.SDK.OrganisationService.IsAliveRequest();
            TimeLog.TransactionalApi.SDK.OrganisationService.IsAliveResponse retVal = ((TimeLog.TransactionalApi.SDK.OrganisationService.OrganisationService)(this)).IsAlive(inValue);
            return retVal.IsAliveResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<TimeLog.TransactionalApi.SDK.OrganisationService.IsAliveResponse> TimeLog.TransactionalApi.SDK.OrganisationService.OrganisationService.IsAliveAsync(TimeLog.TransactionalApi.SDK.OrganisationService.IsAliveRequest request) {
            return base.Channel.IsAliveAsync(request);
        }
        
        public System.Threading.Tasks.Task<TimeLog.TransactionalApi.SDK.OrganisationService.IsAliveResponse> IsAliveAsync() {
            TimeLog.TransactionalApi.SDK.OrganisationService.IsAliveRequest inValue = new TimeLog.TransactionalApi.SDK.OrganisationService.IsAliveRequest();
            return ((TimeLog.TransactionalApi.SDK.OrganisationService.OrganisationService)(this)).IsAliveAsync(inValue);
        }
        
        public TimeLog.TransactionalApi.SDK.OrganisationService.ResponseOfEmployee GetEmployeesPaged(int page, int pageSize, TimeLog.TransactionalApi.SDK.OrganisationService.SecurityToken token) {
            return base.Channel.GetEmployeesPaged(page, pageSize, token);
        }
        
        public System.Threading.Tasks.Task<TimeLog.TransactionalApi.SDK.OrganisationService.ResponseOfEmployee> GetEmployeesPagedAsync(int page, int pageSize, TimeLog.TransactionalApi.SDK.OrganisationService.SecurityToken token) {
            return base.Channel.GetEmployeesPagedAsync(page, pageSize, token);
        }
        
        public TimeLog.TransactionalApi.SDK.OrganisationService.ResponseOfEmployeeHeader GetEmployeeByInitials(string initials, TimeLog.TransactionalApi.SDK.OrganisationService.SecurityToken token) {
            return base.Channel.GetEmployeeByInitials(initials, token);
        }
        
        public System.Threading.Tasks.Task<TimeLog.TransactionalApi.SDK.OrganisationService.ResponseOfEmployeeHeader> GetEmployeeByInitialsAsync(string initials, TimeLog.TransactionalApi.SDK.OrganisationService.SecurityToken token) {
            return base.Channel.GetEmployeeByInitialsAsync(initials, token);
        }
        
        public TimeLog.TransactionalApi.SDK.OrganisationService.ResponseOfEmployeeHeader CreateEmployee(
                    System.Guid employeeGuid, 
                    string initials, 
                    string firstname, 
                    string lastname, 
                    string employeeNo, 
                    string email, 
                    string title, 
                    string telephone, 
                    string mobile, 
                    string normalWorkingTimeName, 
                    string holidayCalendarName, 
                    string allowanceLegislationName, 
                    string employeeTypeName, 
                    string hourlyRateName, 
                    string costPriceName, 
                    string externalIdentifier, 
                    string password, 
                    System.Guid departmentGuid, 
                    TimeLog.TransactionalApi.SDK.OrganisationService.SecurityToken token) {
            return base.Channel.CreateEmployee(employeeGuid, initials, firstname, lastname, employeeNo, email, title, telephone, mobile, normalWorkingTimeName, holidayCalendarName, allowanceLegislationName, employeeTypeName, hourlyRateName, costPriceName, externalIdentifier, password, departmentGuid, token);
        }
        
        public System.Threading.Tasks.Task<TimeLog.TransactionalApi.SDK.OrganisationService.ResponseOfEmployeeHeader> CreateEmployeeAsync(
                    System.Guid employeeGuid, 
                    string initials, 
                    string firstname, 
                    string lastname, 
                    string employeeNo, 
                    string email, 
                    string title, 
                    string telephone, 
                    string mobile, 
                    string normalWorkingTimeName, 
                    string holidayCalendarName, 
                    string allowanceLegislationName, 
                    string employeeTypeName, 
                    string hourlyRateName, 
                    string costPriceName, 
                    string externalIdentifier, 
                    string password, 
                    System.Guid departmentGuid, 
                    TimeLog.TransactionalApi.SDK.OrganisationService.SecurityToken token) {
            return base.Channel.CreateEmployeeAsync(employeeGuid, initials, firstname, lastname, employeeNo, email, title, telephone, mobile, normalWorkingTimeName, holidayCalendarName, allowanceLegislationName, employeeTypeName, hourlyRateName, costPriceName, externalIdentifier, password, departmentGuid, token);
        }
        
        public TimeLog.TransactionalApi.SDK.OrganisationService.ResponseOfEmployeeHeader CreateEmployeeNotification(System.Guid employeeGuid, TimeLog.TransactionalApi.SDK.OrganisationService.SecurityToken token) {
            return base.Channel.CreateEmployeeNotification(employeeGuid, token);
        }
        
        public System.Threading.Tasks.Task<TimeLog.TransactionalApi.SDK.OrganisationService.ResponseOfEmployeeHeader> CreateEmployeeNotificationAsync(System.Guid employeeGuid, TimeLog.TransactionalApi.SDK.OrganisationService.SecurityToken token) {
            return base.Channel.CreateEmployeeNotificationAsync(employeeGuid, token);
        }
        
        public TimeLog.TransactionalApi.SDK.OrganisationService.ResponseOfEmployeeHeader UpdateEmployee(
                    System.Guid employeeGuid, 
                    string initials, 
                    string firstname, 
                    string lastname, 
                    string employeeNo, 
                    string email, 
                    string title, 
                    string telephone, 
                    string mobile, 
                    string normalWorkingTimeName, 
                    string holidayCalendarName, 
                    string allowanceLegislationName, 
                    string employeeTypeName, 
                    string hourlyRateName, 
                    string costPriceName, 
                    string externalIdentifier, 
                    TimeLog.TransactionalApi.SDK.OrganisationService.SecurityToken token) {
            return base.Channel.UpdateEmployee(employeeGuid, initials, firstname, lastname, employeeNo, email, title, telephone, mobile, normalWorkingTimeName, holidayCalendarName, allowanceLegislationName, employeeTypeName, hourlyRateName, costPriceName, externalIdentifier, token);
        }
        
        public System.Threading.Tasks.Task<TimeLog.TransactionalApi.SDK.OrganisationService.ResponseOfEmployeeHeader> UpdateEmployeeAsync(
                    System.Guid employeeGuid, 
                    string initials, 
                    string firstname, 
                    string lastname, 
                    string employeeNo, 
                    string email, 
                    string title, 
                    string telephone, 
                    string mobile, 
                    string normalWorkingTimeName, 
                    string holidayCalendarName, 
                    string allowanceLegislationName, 
                    string employeeTypeName, 
                    string hourlyRateName, 
                    string costPriceName, 
                    string externalIdentifier, 
                    TimeLog.TransactionalApi.SDK.OrganisationService.SecurityToken token) {
            return base.Channel.UpdateEmployeeAsync(employeeGuid, initials, firstname, lastname, employeeNo, email, title, telephone, mobile, normalWorkingTimeName, holidayCalendarName, allowanceLegislationName, employeeTypeName, hourlyRateName, costPriceName, externalIdentifier, token);
        }
        
        public TimeLog.TransactionalApi.SDK.OrganisationService.ResponseOfEmployeeHeader ActivateEmployee(System.Guid employeeGuid, int securityLevel, bool hasCoordinatorRole, System.DateTime hiredDate, TimeLog.TransactionalApi.SDK.OrganisationService.SecurityToken token) {
            return base.Channel.ActivateEmployee(employeeGuid, securityLevel, hasCoordinatorRole, hiredDate, token);
        }
        
        public System.Threading.Tasks.Task<TimeLog.TransactionalApi.SDK.OrganisationService.ResponseOfEmployeeHeader> ActivateEmployeeAsync(System.Guid employeeGuid, int securityLevel, bool hasCoordinatorRole, System.DateTime hiredDate, TimeLog.TransactionalApi.SDK.OrganisationService.SecurityToken token) {
            return base.Channel.ActivateEmployeeAsync(employeeGuid, securityLevel, hasCoordinatorRole, hiredDate, token);
        }
        
        public TimeLog.TransactionalApi.SDK.OrganisationService.ResponseOfEmployeeHeader ChangeEmployeeSecurityLevel(System.Guid employeeGuid, int securityLevel, bool hasCoordinatorRole, TimeLog.TransactionalApi.SDK.OrganisationService.SecurityToken token) {
            return base.Channel.ChangeEmployeeSecurityLevel(employeeGuid, securityLevel, hasCoordinatorRole, token);
        }
        
        public System.Threading.Tasks.Task<TimeLog.TransactionalApi.SDK.OrganisationService.ResponseOfEmployeeHeader> ChangeEmployeeSecurityLevelAsync(System.Guid employeeGuid, int securityLevel, bool hasCoordinatorRole, TimeLog.TransactionalApi.SDK.OrganisationService.SecurityToken token) {
            return base.Channel.ChangeEmployeeSecurityLevelAsync(employeeGuid, securityLevel, hasCoordinatorRole, token);
        }
        
        public TimeLog.TransactionalApi.SDK.OrganisationService.ResponseOfEmployeeHeader ChangeEmployeeDepartment(System.Guid employeeGuid, System.Guid departmentGuid, TimeLog.TransactionalApi.SDK.OrganisationService.SecurityToken token) {
            return base.Channel.ChangeEmployeeDepartment(employeeGuid, departmentGuid, token);
        }
        
        public System.Threading.Tasks.Task<TimeLog.TransactionalApi.SDK.OrganisationService.ResponseOfEmployeeHeader> ChangeEmployeeDepartmentAsync(System.Guid employeeGuid, System.Guid departmentGuid, TimeLog.TransactionalApi.SDK.OrganisationService.SecurityToken token) {
            return base.Channel.ChangeEmployeeDepartmentAsync(employeeGuid, departmentGuid, token);
        }
        
        public TimeLog.TransactionalApi.SDK.OrganisationService.ResponseOfEmployeeHeader DeactivateEmployee(System.Guid employeeGuid, System.DateTime terminationDate, TimeLog.TransactionalApi.SDK.OrganisationService.SecurityToken token) {
            return base.Channel.DeactivateEmployee(employeeGuid, terminationDate, token);
        }
        
        public System.Threading.Tasks.Task<TimeLog.TransactionalApi.SDK.OrganisationService.ResponseOfEmployeeHeader> DeactivateEmployeeAsync(System.Guid employeeGuid, System.DateTime terminationDate, TimeLog.TransactionalApi.SDK.OrganisationService.SecurityToken token) {
            return base.Channel.DeactivateEmployeeAsync(employeeGuid, terminationDate, token);
        }
        
        public TimeLog.TransactionalApi.SDK.OrganisationService.ResponseOfDepartment GetDepartments(TimeLog.TransactionalApi.SDK.OrganisationService.SecurityToken token) {
            return base.Channel.GetDepartments(token);
        }
        
        public System.Threading.Tasks.Task<TimeLog.TransactionalApi.SDK.OrganisationService.ResponseOfDepartment> GetDepartmentsAsync(TimeLog.TransactionalApi.SDK.OrganisationService.SecurityToken token) {
            return base.Channel.GetDepartmentsAsync(token);
        }
        
        public TimeLog.TransactionalApi.SDK.OrganisationService.ResponseOfDepartment GetDepartmentByNo(string departmentNo, TimeLog.TransactionalApi.SDK.OrganisationService.SecurityToken token) {
            return base.Channel.GetDepartmentByNo(departmentNo, token);
        }
        
        public System.Threading.Tasks.Task<TimeLog.TransactionalApi.SDK.OrganisationService.ResponseOfDepartment> GetDepartmentByNoAsync(string departmentNo, TimeLog.TransactionalApi.SDK.OrganisationService.SecurityToken token) {
            return base.Channel.GetDepartmentByNoAsync(departmentNo, token);
        }
        
        public TimeLog.TransactionalApi.SDK.OrganisationService.ResponseOfDepartment CreateDepartment(System.Guid departmentGuid, string name, string no, System.Guid parentDepartmentGuid, System.Guid departmentManagerGuid, TimeLog.TransactionalApi.SDK.OrganisationService.SecurityToken token) {
            return base.Channel.CreateDepartment(departmentGuid, name, no, parentDepartmentGuid, departmentManagerGuid, token);
        }
        
        public System.Threading.Tasks.Task<TimeLog.TransactionalApi.SDK.OrganisationService.ResponseOfDepartment> CreateDepartmentAsync(System.Guid departmentGuid, string name, string no, System.Guid parentDepartmentGuid, System.Guid departmentManagerGuid, TimeLog.TransactionalApi.SDK.OrganisationService.SecurityToken token) {
            return base.Channel.CreateDepartmentAsync(departmentGuid, name, no, parentDepartmentGuid, departmentManagerGuid, token);
        }
        
        public TimeLog.TransactionalApi.SDK.OrganisationService.ResponseOfDepartment UpdateDepartment(System.Guid departmentGuid, string name, string no, System.Guid parentDepartmentGuid, System.Guid departmentManagerGuid, TimeLog.TransactionalApi.SDK.OrganisationService.SecurityToken token) {
            return base.Channel.UpdateDepartment(departmentGuid, name, no, parentDepartmentGuid, departmentManagerGuid, token);
        }
        
        public System.Threading.Tasks.Task<TimeLog.TransactionalApi.SDK.OrganisationService.ResponseOfDepartment> UpdateDepartmentAsync(System.Guid departmentGuid, string name, string no, System.Guid parentDepartmentGuid, System.Guid departmentManagerGuid, TimeLog.TransactionalApi.SDK.OrganisationService.SecurityToken token) {
            return base.Channel.UpdateDepartmentAsync(departmentGuid, name, no, parentDepartmentGuid, departmentManagerGuid, token);
        }
        
        public TimeLog.TransactionalApi.SDK.OrganisationService.ResponseOfDepartment DeactivateDepartment(System.Guid departmentGuid, TimeLog.TransactionalApi.SDK.OrganisationService.SecurityToken token) {
            return base.Channel.DeactivateDepartment(departmentGuid, token);
        }
        
        public System.Threading.Tasks.Task<TimeLog.TransactionalApi.SDK.OrganisationService.ResponseOfDepartment> DeactivateDepartmentAsync(System.Guid departmentGuid, TimeLog.TransactionalApi.SDK.OrganisationService.SecurityToken token) {
            return base.Channel.DeactivateDepartmentAsync(departmentGuid, token);
        }
        
        public TimeLog.TransactionalApi.SDK.OrganisationService.ResponseOfstring GetEmployeeTypes(TimeLog.TransactionalApi.SDK.OrganisationService.SecurityToken token) {
            return base.Channel.GetEmployeeTypes(token);
        }
        
        public System.Threading.Tasks.Task<TimeLog.TransactionalApi.SDK.OrganisationService.ResponseOfstring> GetEmployeeTypesAsync(TimeLog.TransactionalApi.SDK.OrganisationService.SecurityToken token) {
            return base.Channel.GetEmployeeTypesAsync(token);
        }
    }
}
